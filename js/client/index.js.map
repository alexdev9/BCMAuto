{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/client/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Car } from '../types';\r\nimport { api } from '../mock-api';\r\nimport { formatPrice } from '../utils';\r\nimport { setupCarouselControls } from './carousel';\r\nimport { setupContactForm } from './contact';\r\nimport { setupCarDetails } from './car-details';\r\n\r\ntype SortField = 'price' | 'year' | 'mileage';\r\ntype SortDirection = 'asc' | 'desc';\r\ntype Transmission = 'automatic' | 'manual' | undefined;\r\ntype FuelType = 'petrol' | 'diesel' | 'electric' | 'hybrid' | undefined;\r\n\r\ninterface FilterState {\r\n    make: string;\r\n    model: string;\r\n    minYear: number | undefined;\r\n    maxYear: number | undefined;\r\n    minPrice: number | undefined;\r\n    maxPrice: number | undefined;\r\n    transmission: Transmission;\r\n    fuelType: FuelType;\r\n}\r\n\r\n// Type guard for SortField\r\nfunction isSortField(value: string): value is SortField {\r\n    return ['price', 'year', 'mileage'].includes(value);\r\n}\r\n\r\n// Convert string values to typed values\r\nfunction getTransmissionValue(value: string): Transmission {\r\n    if (['automatic', 'manual'].includes(value)) {\r\n        return value as 'automatic' | 'manual';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getFuelTypeValue(value: string): FuelType {\r\n    if (['petrol', 'diesel', 'electric', 'hybrid'].includes(value)) {\r\n        return value as 'petrol' | 'diesel' | 'electric' | 'hybrid';\r\n    }\r\n    return undefined;\r\n}\r\n\r\nexport async function initializeClient() {\r\n    const carList = document.getElementById('carList');\r\n    const searchInput = document.getElementById('searchInput') as HTMLInputElement;\r\n    const filterToggle = document.getElementById('filterToggle');\r\n    const filterPanel = document.getElementById('filterPanel');\r\n    const sortField = document.getElementById('sortField') as HTMLSelectElement;\r\n    const sortDirection = document.getElementById('sortDirection') as HTMLSelectElement;\r\n    \r\n    if (!carList) return;\r\n\r\n    // Setup all client-side features\r\n    setupCarouselControls();\r\n    setupContactForm();\r\n    setupCarDetails();\r\n\r\n    // Create loading sentinel\r\n    const loadingSentinel = document.createElement('div');\r\n    loadingSentinel.className = 'loading-sentinel';\r\n    loadingSentinel.style.height = '10px';\r\n    loadingSentinel.style.marginTop = '20px';\r\n\r\n    // Filter state management\r\n    let filterState: FilterState = {\r\n        make: '',\r\n        model: '',\r\n        minYear: undefined,\r\n        maxYear: undefined,\r\n        minPrice: undefined,\r\n        maxPrice: undefined,\r\n        transmission: undefined,\r\n        fuelType: undefined\r\n    };\r\n\r\n    // Show loading state\r\n    function showLoadingState() {\r\n        const loadingTemplate = document.getElementById('loadingCardTemplate') as HTMLTemplateElement;\r\n        if (!loadingTemplate || !carList) return;\r\n        \r\n        // Clear existing loading placeholders first\r\n        const existingPlaceholders = carList.querySelectorAll('.loading-card');\r\n        existingPlaceholders.forEach(placeholder => placeholder.remove());\r\n        \r\n        const fragment = document.createDocumentFragment();\r\n        // Add 3 loading placeholders\r\n        for (let i = 0; i < 3; i++) {\r\n            const clone = loadingTemplate.content.cloneNode(true);\r\n            fragment.appendChild(clone);\r\n        }\r\n        carList.appendChild(fragment);\r\n    }\r\n\r\n    // Clear list content while preserving loading states\r\n    function clearListContent() {\r\n        if (!carList) return;\r\n        const loadingCards = Array.from(carList.querySelectorAll('.loading-card'));\r\n        carList.innerHTML = '';\r\n        loadingCards.forEach(card => carList.appendChild(card.cloneNode(true)));\r\n    }\r\n\r\n    // Setup filter panel toggle\r\n    if (filterToggle && filterPanel) {\r\n        filterToggle.addEventListener('click', () => {\r\n            const isHidden = filterPanel.classList.contains('hidden');\r\n            if (isHidden) {\r\n                filterPanel.classList.remove('hidden');\r\n                requestAnimationFrame(() => {\r\n                    filterPanel.classList.add('opacity-100', 'translate-y-0');\r\n                    filterPanel.classList.remove('opacity-0', '-translate-y-4');\r\n                });\r\n            } else {\r\n                filterPanel.classList.add('opacity-0', '-translate-y-4');\r\n                filterPanel.classList.remove('opacity-100', 'translate-y-0');\r\n                setTimeout(() => {\r\n                    filterPanel.classList.add('hidden');\r\n                }, 300);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Setup filter handlers\r\n    const setupFilterHandlers = () => {\r\n        const makeInput = document.getElementById('makeFilter') as HTMLInputElement;\r\n        const modelInput = document.getElementById('modelFilter') as HTMLInputElement;\r\n        const minYearInput = document.getElementById('minYear') as HTMLInputElement;\r\n        const maxYearInput = document.getElementById('maxYear') as HTMLInputElement;\r\n        const minPriceInput = document.getElementById('minPrice') as HTMLInputElement;\r\n        const maxPriceInput = document.getElementById('maxPrice') as HTMLInputElement;\r\n        const transmissionSelect = document.getElementById('transmissionFilter') as HTMLSelectElement;\r\n        const fuelTypeSelect = document.getElementById('fuelTypeFilter') as HTMLSelectElement;\r\n        const resetFiltersBtn = document.getElementById('resetFilters');\r\n        const applyFiltersBtn = document.getElementById('applyFilters');\r\n\r\n        if (resetFiltersBtn) {\r\n            resetFiltersBtn.addEventListener('click', () => {\r\n                makeInput.value = '';\r\n                modelInput.value = '';\r\n                minYearInput.value = '';\r\n                maxYearInput.value = '';\r\n                minPriceInput.value = '';\r\n                maxPriceInput.value = '';\r\n                transmissionSelect.value = '';\r\n                fuelTypeSelect.value = '';\r\n                filterState = {\r\n                    make: '',\r\n                    model: '',\r\n                    minYear: undefined,\r\n                    maxYear: undefined,\r\n                    minPrice: undefined,\r\n                    maxPrice: undefined,\r\n                    transmission: undefined,\r\n                    fuelType: undefined\r\n                };\r\n                resetAndReload();\r\n            });\r\n        }\r\n\r\n        if (applyFiltersBtn) {\r\n            applyFiltersBtn.addEventListener('click', () => {\r\n                filterState = {\r\n                    make: makeInput.value,\r\n                    model: modelInput.value,\r\n                    minYear: minYearInput.value ? parseInt(minYearInput.value) : undefined,\r\n                    maxYear: maxYearInput.value ? parseInt(maxYearInput.value) : undefined,\r\n                    minPrice: minPriceInput.value ? parseInt(minPriceInput.value) : undefined,\r\n                    maxPrice: maxPriceInput.value ? parseInt(maxPriceInput.value) : undefined,\r\n                    transmission: getTransmissionValue(transmissionSelect.value),\r\n                    fuelType: getFuelTypeValue(fuelTypeSelect.value)\r\n                };\r\n                resetAndReload();\r\n            });\r\n        }\r\n    };\r\n\r\n    // State management\r\n    let currentPage = 1;\r\n    let searchTerm = '';\r\n    let isLoading = false;\r\n    let hasMoreCars = true;\r\n\r\n    // Create and render car card\r\n    function createCarCard(car: Car): HTMLDivElement {\r\n        const div = document.createElement('div');\r\n        div.className = 'bg-white rounded-lg shadow-lg overflow-hidden car-card cursor-pointer transform transition-all duration-200 hover:scale-102 opacity-0';\r\n        div.onclick = () => {\r\n            (window as any).openCarDetailsModal(car);\r\n        };\r\n        div.innerHTML = `\r\n            <div class=\"relative\">\r\n                <div class=\"image-carousel\" data-car-id=\"${car.id}\" data-images='${JSON.stringify(car.images)}' data-current-index=\"0\">\r\n                    <img src=\"${car.images[0]}\" alt=\"${car.make} ${car.model}\" \r\n                         class=\"w-full h-48 object-cover transition-opacity duration-200\">\r\n                    <button onclick=\"prevImage('${car.id}'); event.stopPropagation();\" \r\n                            class=\"absolute left-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75 transition-colors duration-200\">\r\n                        <i class=\"fas fa-chevron-left\"></i>\r\n                    </button>\r\n                    <button onclick=\"nextImage('${car.id}'); event.stopPropagation();\" \r\n                            class=\"absolute right-2 top-1/2 transform -translate-y-1/2 bg-black bg-opacity-50 text-white p-2 rounded-full hover:bg-opacity-75 transition-colors duration-200\">\r\n                        <i class=\"fas fa-chevron-right\"></i>\r\n                    </button>\r\n                    <div class=\"image-counter absolute bottom-2 right-2 bg-black bg-opacity-50 text-white px-2 py-1 rounded\">\r\n                        1/${car.images.length}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"p-6\">\r\n                <h3 class=\"text-xl font-bold mb-2\">${car.year} ${car.make} ${car.model}</h3>\r\n                <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n                    <div>\r\n                        <i class=\"fas fa-car text-gray-500\"></i>\r\n                        <span class=\"ml-2\">${car.bodyType}</span>\r\n                    </div>\r\n                    <div>\r\n                        <i class=\"fas fa-tachometer-alt text-gray-500\"></i>\r\n                        <span class=\"ml-2\">${car.mileage.toLocaleString()} km</span>\r\n                    </div>\r\n                    <div>\r\n                        <i class=\"fas fa-gas-pump text-gray-500\"></i>\r\n                        <span class=\"ml-2\">${\r\n                            car.fuelType === 'petrol' ? 'Benzina' :\r\n                            car.fuelType === 'diesel' ? 'Diesel' :\r\n                            car.fuelType === 'electric' ? 'Elettrica' :\r\n                            car.fuelType === 'hybrid' ? 'Ibrida' : car.fuelType\r\n                        }</span>\r\n                    </div>\r\n                    <div>\r\n                        <i class=\"fas fa-cog text-gray-500\"></i>\r\n                        <span class=\"ml-2\">${car.transmission === 'automatic' ? 'Automatica' : 'Manuale'}</span>\r\n                    </div>\r\n                    <div>\r\n                        <i class=\"fas fa-horse text-gray-500\"></i>\r\n                        <span class=\"ml-2\">${car.power.hp} CV (${car.power.kw} kW)</span>\r\n                    </div>\r\n                    <div>\r\n                        <i class=\"fas fa-tag text-gray-500\"></i>\r\n                        <span class=\"ml-2\">${formatPrice(car.price)}</span>\r\n                    </div>\r\n                </div>\r\n                <button onclick=\"event.stopPropagation(); openContactModal('${car.id}')\" \r\n                        class=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700 transition-colors duration-200\">\r\n                    Contatta per Quest'Auto\r\n                </button>\r\n            </div>\r\n        `;\r\n\r\n        // Trigger fade in animation after a small delay\r\n        requestAnimationFrame(() => {\r\n            requestAnimationFrame(() => {\r\n                div.style.opacity = '1';\r\n            });\r\n        });\r\n\r\n        return div;\r\n    }\r\n\r\n    // Display cars\r\n    async function loadMoreCars() {\r\n        if (!carList || isLoading || !hasMoreCars) return;\r\n        \r\n        isLoading = true;\r\n        loadingSentinel.remove(); // Remove sentinel while loading\r\n        \r\n        if (currentPage === 1) {\r\n            showLoadingState();\r\n        }\r\n        \r\n        try {\r\n            const sortFieldValue = sortField?.value;\r\n            const response = await api.getCars({\r\n                page: currentPage,\r\n                limit: 3,\r\n                search: searchTerm,\r\n                ...filterState,\r\n                sortBy: sortFieldValue && isSortField(sortFieldValue) ? sortFieldValue : undefined,\r\n                sortDirection: sortDirection?.value as SortDirection | undefined\r\n            });\r\n            \r\n            // Create fragment for batch DOM update\r\n            const fragment = document.createDocumentFragment();\r\n            \r\n            // Add new cars\r\n            response.data.forEach(car => {\r\n                const cardElement = createCarCard(car);\r\n                fragment.appendChild(cardElement);\r\n            });\r\n\r\n            // Remove loading placeholders only after preparing new content\r\n            const loadingCards = carList.querySelectorAll('.loading-card');\r\n            loadingCards.forEach(card => card.remove());\r\n\r\n            // Batch DOM update\r\n            carList.appendChild(fragment);\r\n\r\n            // Update state\r\n            currentPage++;\r\n            hasMoreCars = currentPage <= response.totalPages;\r\n            \r\n            // Add sentinel if there are more cars to load\r\n            if (hasMoreCars) {\r\n                carList.appendChild(loadingSentinel);\r\n            }\r\n            \r\n            // Show no results message if needed\r\n            if (response.data.length === 0 && currentPage === 1) {\r\n                carList.innerHTML = `\r\n                    <div class=\"col-span-3 text-center py-8 animate-fade-in\">\r\n                        <p class=\"text-gray-500\">Nessuna auto trovata${searchTerm ? ` corrispondente a \"${searchTerm}\"` : ''}.</p>\r\n                    </div>\r\n                `;\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading cars:', error);\r\n            if (currentPage === 1) {\r\n                carList.innerHTML = `\r\n                    <div class=\"col-span-3 text-center py-8 animate-fade-in\">\r\n                        <p class=\"text-red-500\">Errore nel caricamento delle auto. Riprova più tardi.</p>\r\n                    </div>\r\n                `;\r\n            }\r\n        } finally {\r\n            isLoading = false;\r\n        }\r\n    }\r\n\r\n    // Reset and reload cars\r\n    function resetAndReload() {\r\n        currentPage = 1;\r\n        hasMoreCars = true;\r\n        isLoading = false;\r\n        clearListContent();\r\n        loadMoreCars();\r\n    }\r\n\r\n    // Setup infinite scroll\r\n    const observerOptions = {\r\n        root: null,\r\n        rootMargin: '100px',\r\n        threshold: 0.1\r\n    };\r\n\r\n    const observer = new IntersectionObserver((entries) => {\r\n        entries.forEach(entry => {\r\n            if (entry.isIntersecting && !isLoading && hasMoreCars) {\r\n                loadMoreCars();\r\n            }\r\n        });\r\n    }, observerOptions);\r\n\r\n    // Start observing the sentinel\r\n    observer.observe(loadingSentinel);\r\n\r\n    // Setup search handler\r\n    if (searchInput) {\r\n        let debounceTimeout: number;\r\n        searchInput.addEventListener('input', (e) => {\r\n            const target = e.target as HTMLInputElement;\r\n            clearTimeout(debounceTimeout);\r\n            debounceTimeout = window.setTimeout(() => {\r\n                if (target.value === searchTerm) return;\r\n                searchTerm = target.value;\r\n                resetAndReload();\r\n            }, 150);\r\n        });\r\n    }\r\n\r\n    // Setup sort handlers\r\n    if (sortField && sortDirection) {\r\n        sortField.addEventListener('change', resetAndReload);\r\n        sortDirection.addEventListener('change', resetAndReload);\r\n    }\r\n\r\n    // Initialize filter handlers\r\n    setupFilterHandlers();\r\n\r\n    // Initial load\r\n    showLoadingState();\r\n    await loadMoreCars();\r\n}"]}